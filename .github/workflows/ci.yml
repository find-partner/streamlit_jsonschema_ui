name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        node-version: ["18"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: src/streamlit_jsonschema_ui/frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Install Python dependencies
      run: uv sync

    - name: Install frontend dependencies
      working-directory: src/streamlit_jsonschema_ui/frontend
      run: npm ci

    - name: Build frontend
      working-directory: src/streamlit_jsonschema_ui/frontend
      run: npm run build

    - name: Run linting
      run: |
        uv run black --check .
        uv run isort --check-only .

    - name: Build package
      run: uv run python -m build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        cache: 'npm'
        cache-dependency-path: src/streamlit_jsonschema_ui/frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: src/streamlit_jsonschema_ui/frontend
      run: npm ci

    - name: Build frontend
      working-directory: src/streamlit_jsonschema_ui/frontend
      run: npm run build

    - name: Build package
      run: uv run python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true 